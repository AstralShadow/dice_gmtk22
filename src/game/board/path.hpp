#ifndef INCLUDE_PATH_HPP
#define INCLUDE_PATH_HPP

#include "utils/types.hpp"
#include "utils/point.hpp"
#include <array>
#include <utility>
#include <cmath>


namespace game::board
{

[[maybe_unused]]
const std::array<FPoint, 148> path {
    FPoint{118.00,280.00},
    {128.00,292.00},{154.00,308.67},{165.33,316.67},
    {176.67,324.67},{204.67,347.33},{213.33,353.33},
    {222.00,359.33},{244.67,378.00},{256.67,386.67},
    {268.67,395.33},{300.67,416.00},{320.00,420.67},
    {339.33,425.33},{371.33,433.33},{407.33,432.67},
    {443.33,432.00},{474.67,423.33},{506.00,413.33},
    {537.33,403.33},{567.33,382.00},{583.33,370.00},
    {599.33,358.00},{638.33,324.67},{647.00,304.67},
    {655.67,284.67},{666.33,243.00},{660.00,217.33},
    {653.67,191.67},{623.00,182.00},{613.67,151.33},
    {604.33,120.67},{626.33,98.00},{660.00,93.67},
    {693.67,89.33},{743.67,83.00},{780.00,83.33},
    {816.33,83.67},{872.00,86.33},{913.33,84.67},
    {954.67,83.00},{998.00,84.00},{1024.33,97.67},
    {1050.67,111.33},{1062.33,125.33},{1068.33,143.33},
    {1074.33,161.33},{1053.67,187.33},{1063.67,202.67},
    {1073.67,218.00},{1111.33,234.00},{1147.67,224.67},
    {1184.00,215.33},{1233.67,181.67},{1253.00,173.67},
    {1272.33,165.67},{1319.33,152.33},{1345.33,153.67},
    {1371.33,155.00},{1401.67,174.33},{1411.67,191.67},
    {1421.67,209.00},{1425.33,231.67},{1413.00,254.67},
    {1400.67,277.67},{1393.33,300.33},{1372.67,324.00},
    {1352.00,347.67},{1332.00,391.00},{1331.33,415.67},
    {1330.67,440.33},{1337.33,474.33},{1350.33,500.67},
    {1363.33,527.00},{1379.33,547.00},{1379.67,573.67},
    {1380.00,600.33},{1363.00,619.67},{1335.67,621.33},
    {1308.33,623.00},{1281.33,610.00},{1260.33,589.67},
    {1239.33,569.33},{1213.67,544.33},{1196.00,519.33},
    {1178.33,494.33},{1150.00,461.33},{1116.33,453.33},
    {1082.67,445.33},{1025.50,445.50},{998.00,476.50},
    {970.50,507.50},{960.50,522.50},{937.00,536.50},
    {913.50,550.50},{875.00,577.00},{835.50,584.50},
    {796.00,592.00},{731.00,597.50},{695.00,597.00},
    {659.00,596.50},{613.00,590.00},{582.00,588.50},
    {551.00,587.00},{484.00,582.50},{468.00,583.00},
    {452.00,583.50},{389.00,585.00},{363.00,588.00},
    {337.00,591.00},{277.50,606.00},{258.00,621.50},
    {238.50,637.00},{221.50,660.00},{207.00,683.50},
    {192.50,707.00},{201.00,767.50},{216.50,791.50},
    {232.00,815.50},{266.50,847.50},{292.50,860.50},
    {318.50,873.50},{344.00,904.50},{385.50,912.00},
    {427.00,919.50},{495.50,915.50},{527.00,907.50},
    {558.50,899.50},{637.50,856.50},{658.00,839.00},
    {678.50,821.50},{728.00,782.50},{763.00,774.00},
    {798.00,765.50},{819.50,765.50},{832.00,780.50},
    {844.50,795.50},{868.00,831.50},{881.50,862.50},
    {895.00,893.50},{915.50,927.00},{933.50,956.00},
    {951.50,985.00},{967.50,1020.50},{992.50,1040.00},
    {1017.50,1059.50},{1064.00,1082.50},{1093.50,1092.50}
};

enum terrain_t
{
    FOREST,
    MEADOW,
    BEACH
};


typedef std::pair<float, terrain_t> terrain_data_t;
[[maybe_unused]]
const std::array<terrain_data_t, 7> terrain_data {
    terrain_data_t{0, FOREST},
    {0.3, MEADOW},
    {0.64, FOREST},
    {0.72, MEADOW},
    {0.74, BEACH},
    {0.87, MEADOW},
    {0.95, BEACH}
};


[[maybe_unused]]
constexpr float path_length()
{
    FPoint pos = path[0];
    float length = 0;
    for(u32 i = 1; i < path.size(); ++i) {
        FPoint next = path[i];
        length += std::hypot(
            next.x - pos.x,
            next.y - pos.y
        );
        pos = next;
    }
    return length;
}

extern FPoint path_pos(float progress); // [-1, 1]
extern terrain_t path_biome(float progress);

}

#endif // INCLUDE_PATH_HPP
