#ifndef INCLUDE_PATH_HPP
#define INCLUDE_PATH_HPP

#include "utils/types.hpp"
#include "utils/point.hpp"
#include "game/terrain.hpp"
#include <array>
#include <utility>
#include <cmath>


namespace game::board
{
    using game::terrain_t;

    [[maybe_unused]]
    const std::array<FPoint, 148> path {
        FPoint{118.00,280.00},
        {128,292},{154,308.67},{165.33,316.67},
        {176.67,324.67},{204.67,347.33},{213.33,353.33},
        {222,359.33},{244.67,378},{256.67,386.67},
        {268.67,395.33},{300.67,416},{320,420.67},
        {339.33,425.33},{371.33,433.33},{407.33,432.67},
        {443.33,432},{474.67,423.33},{506,413.33},
        {537.33,403.33},{567.33,382},{583.33,370},
        {599.33,358},{638.33,324.67},{647,304.67},
        {655.67,284.67},{666.33,243},{660,217.33},
        {653.67,191.67},{623,182},{613.67,151.33},
        {604.33,120.67},{626.33,98},{660,93.67},
        {693.67,89.33},{743.67,83},{780,83.33},
        {816.33,83.67},{872,86.33},{913.33,84.67},
        {954.67,83},{998,84},{1024.33,97.67},
        {1050.67,111.33},{1062.33,125.33},{1068.33,143.33},
        {1074.33,161.33},{1053.67,187.33},{1063.67,202.67},
        {1073.67,218},{1111.33,234},{1147.67,224.67},
        {1184,215.33},{1233.67,181.67},{1253,173.67},
        {1272.33,165.67},{1319.33,152.33},{1345.33,153.67},
        {1371.33,155},{1401.67,174.33},{1411.67,191.67},
        {1421.67,209},{1425.33,231.67},{1413,254.67},
        {1400.67,277.67},{1393.33,300.33},{1372.67,324},
        {1352,347.67},{1332,391},{1331.33,415.67},
        {1330.67,440.33},{1337.33,474.33},{1350.33,500.67},
        {1363.33,527},{1379.33,547},{1379.67,573.67},
        {1380,600.33},{1363,619.67},{1335.67,621.33},
        {1308.33,623},{1281.33,610},{1260.33,589.67},
        {1239.33,569.33},{1213.67,544.33},{1196,519.33},
        {1178.33,494.33},{1150,461.33},{1116.33,453.33},
        {1082.67,445.33},{1025.5,445.5},{998,476.5},
        {970.5,507.5},{960.5,522.5},{937,536.5},
        {913.5,550.5},{875,577},{835.5,584.5},
        {796,592},{731,597.5},{695,597},
        {659,596.5},{613,590},{582,588.5},
        {551,587},{484,582.5},{468,583},
        {452,583.5},{389,585},{363,588},
        {337,591},{277.5,606},{258,621.5},
        {238.5,637},{221.5,660},{207,683.5},
        {192.5,707},{201,767.5},{216.5,791.5},
        {232,815.5},{266.5,847.5},{292.5,860.5},
        {318.5,873.5},{344,904.5},{385.5,912},
        {427,919.5},{495.5,915.5},{527,907.5},
        {558.5,899.5},{637.5,856.5},{658,839},
        {678.5,821.5},{728,782.5},{763,774},
        {798,765.5},{819.5,765.5},{832,780.5},
        {844.5,795.5},{868,831.5},{881.5,862.5},
        {895,893.5},{915.5,927},{933.5,956},
        {951.5,985},{967.5,1020.5},{992.5,1040},
        {1017.5,1059.5},{1064,1082.5},{1093.5,1092.5}
    };

typedef std::pair<float, terrain_t> terrain_data_t;
[[maybe_unused]]
const std::array<terrain_data_t, 7> terrain_data {
    terrain_data_t{0, FOREST},
    {0.3, MEADOW},
    {0.64, FOREST},
    {0.72, MEADOW},
    {0.74, BEACH},
    {0.87, MEADOW},
    {0.95, BEACH}
};


[[maybe_unused]]
constexpr float path_length()
{
    FPoint pos = path[0];
    float length = 0;
    for(u32 i = 1; i < path.size(); ++i) {
        FPoint next = path[i];
        length += std::hypot(
            next.x - pos.x,
            next.y - pos.y
        );
        pos = next;
    }
    return length;
}

extern FPoint path_pos(float progress); // [-1, 1]
extern terrain_t path_biome(float progress);

}

#endif // INCLUDE_PATH_HPP
